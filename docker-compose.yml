version: '3'

services:
  django:
    build:
      context: .
      dockerfile: compose/Dockerfile-prod
    command: /uwsgi_aws.sh
    links:
      - postgres
    restart: always
    ports:
      - "0.0.0.0:8000:8000"
  zookeeper:
    image: debezium/zookeeper:1.8
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
  kafka:
    image: debezium/kafka:1.8
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
  connect:
    image: debezium/connect:1.8
    ports:
      - "8083:8083"
    links:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
  #  kafka-ui:
  #    image: provectuslabs/kafka-ui
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      - KAFKA_CLUSTERS_0_NAME=local
  #      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  postgres:
    image: debezium/postgres:14
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  #  filebeat:
  #    build:
  #      context: .
  #      dockerfile: compose/Dockerfile-filebeat
  #    command: filebeat -e -d "*"
  #    restart: always
  #
  #
  #  metricbeat:
  #    build:
  #      context: .
  #      dockerfile: compose/Dockerfile-metricbeat
  #    command: metricbeat -e -d "*"
  #    restart: always
  #
  #
  #  heartbeat:
  #    build:
  #      context: .
  #      dockerfile: compose/Dockerfile-heartbeat
  #    command: heartbeat -e -d "*"
  #    restart: always

volumes:
  postgres_data: { }
